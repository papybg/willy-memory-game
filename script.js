// script.js
document.addEventListener('DOMContentLoaded', () => {
    // üéØ –î–µ—Ñ–∏–Ω–∏—Ü–∏–∏ –Ω–∞ —Ç–µ–º–∏—Ç–µ –∏ —Ç–µ—Ö–Ω–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const ALL_THEMES = {
        –ø—Ä–µ–≤–æ–∑–Ω–∏_—Å—Ä–µ–¥—Å—Ç–≤–∞: ['bus.jpg', 'airplane.jpg', 'firetruck.jpg', 'train.jpg', 'truck.jpg'],
        animals: ['dog.jpg', 'cat.jpg', 'lion.jpg', 'elephant.jpg', 'monkey.jpg'],
        flowers: ['rose.jpg', 'tulip.jpg', 'lily.jpg', 'daisy.jpg', 'sunflower.jpg']
    };

    // üéØ DOM –µ–ª–µ–º–µ–Ω—Ç–∏
    const themeRadios = document.querySelectorAll('input[name="theme"]');
    const countRadios = document.querySelectorAll('input[name="count"]');
    const startGameBtn = document.getElementById('startGameBtn');
    const optionsContainer = document.getElementById('optionsContainer');

    const gameTitleEl = document.getElementById('gameTitle');
    const messageDisplay = document.getElementById('gameMessage');
    const startBtn = document.getElementById('start');
    const reloadBtn = document.getElementById('reload');
    const allPicsEl = document.getElementById('allPics');
    const gamePicsEl = document.getElementById('gamePics');
    const containerEl = document.getElementById('container');

    // üéØ –ü—Ä–æ–º–µ–Ω–ª–∏–≤–∏ –∑–∞ —Å—ä—Å—Ç–æ—è–Ω–∏–µ—Ç–æ –Ω–∞ –∏–≥—Ä–∞—Ç–∞
    let currentThemeImages = [];
    let numberOfPics = 0;
    let selectedGamePics = [];
    let hiddenImageElement = null; // –†–µ—Ñ–µ—Ä–µ–Ω—Ü–∏—è –∫—ä–º –°–ö–†–ò–¢–ò–Ø –æ—Ä–∏–≥–∏–Ω–∞–ª–µ–Ω img –µ–ª–µ–º–µ–Ω—Ç
    let hiddenIndex = null;
    let awaitingChoice = false;
    let hideOverlayElement = null; // –†–µ—Ñ–µ—Ä–µ–Ω—Ü–∏—è –∫—ä–º –Ω–∞—Å–ª–∞–≥–≤–∞—â–∞—Ç–∞ hide.png –∫–∞—Ä—Ç–∏–Ω–∫–∞

    // --- –§—É–Ω–∫—Ü–∏–∏ ---

    function updateStartButtonState() {
        const themeSelected = Array.from(themeRadios).some(r => r.checked);
        const countSelected = Array.from(countRadios).some(r => r.checked);
        startGameBtn.disabled = !(themeSelected && countSelected);
    }

    function startGame() {
        const selectedTheme = document.querySelector('input[name="theme"]:checked').value;
        numberOfPics = parseInt(document.querySelector('input[name="count"]:checked').value);

        currentThemeImages = ALL_THEMES[selectedTheme];

        gameTitleEl.textContent = `–ü–æ–∑–Ω–∞–π ${selectedTheme.replace('_', ' ').toUpperCase()}!`;
        showMessage('–ù–∞—Ç–∏—Å–Ω–∏ "–°–ö–†–ò–ô –ö–ê–†–¢–ò–ù–ê" –∑–∞ –¥–∞ –∑–∞–ø–æ—á–Ω–µ—à.', 'info');

        optionsContainer.classList.add('hidden');
        startGameBtn.classList.add('hidden');

        document.getElementById('controls').classList.remove('hidden');
        containerEl.classList.remove('hidden');

        renderGamePics();
        // –í–ê–ñ–ù–û: resetGameState —Å–µ –∏–∑–≤–∏–∫–≤–∞ —Å–ª–µ–¥ renderGamePics, –∑–∞ –¥–∞ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–∞, —á–µ –≤—Å–∏—á–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å–∞ –≤–∏–¥–∏–º–∏ –∏ overlay-—è—Ç –µ —Å–∫—Ä–∏—Ç
        resetGameState(); 
        renderAllPics();
    }

    function renderAllPics() {
        allPicsEl.innerHTML = '';
        currentThemeImages.forEach(name => {
            const img = document.createElement('img');
            img.src = 'images/' + name;
            img.dataset.name = name;
            img.alt = name.replace('.jpg', '');
            img.addEventListener('click', chooseHandler);
            allPicsEl.appendChild(img);
        });
    }

    function renderGamePics() {
        gamePicsEl.innerHTML = ''; // –ò–∑—á–∏—Å—Ç–≤–∞–º–µ —Å—Ç–∞—Ä–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏

        const shuffledImages = [...currentThemeImages].sort(() => 0.5 - Math.random());
        selectedGamePics = shuffledImages.slice(0, numberOfPics);

        selectedGamePics.forEach((name, idx) => {
            const img = document.createElement('img');
            img.src = 'images/' + name;
            img.dataset.idx = idx;
            img.alt = name.replace('.jpg', '');
            gamePicsEl.appendChild(img);
        });

        // –°—ä–∑–¥–∞–≤–∞–º–µ overlay –µ–ª–µ–º–µ–Ω—Ç–∞ —Å–∞–º–æ –≤–µ–¥–Ω—ä–∂ –∏ –≥–æ –¥–æ–±–∞–≤—è–º–µ –∫—ä–º gamePicsEl
        if (!hideOverlayElement) {
            hideOverlayElement = document.createElement('img');
            hideOverlayElement.src = 'images/hide.png'; // –ü—ä—Ç—è –¥–æ –≤–∞—à–∞—Ç–∞ hide.png –∫–∞—Ä—Ç–∏–Ω–∫–∞
            hideOverlayElement.classList.add('hide-overlay');
            gamePicsEl.appendChild(hideOverlayElement); // –î–æ–±–∞–≤—è–º–µ –≥–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –Ω–æ –µ —Å–∫—Ä–∏—Ç –æ—Ç CSS
        }
        
        // –ë—É—Ç–æ–Ω–∏—Ç–µ —Å–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–∞—Ç –æ—Ç resetGameState
    }

    // –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å–∫—Ä–∏–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞
    function hideRandomPicture() {
        if (awaitingChoice) return;

        // –ü—ä—Ä–≤–æ –Ω—É–ª–∏—Ä–∞–º–µ –ø—Ä–µ–¥–∏—à–Ω–æ—Ç–æ —Å—ä—Å—Ç–æ—è–Ω–∏–µ, –∞–∫–æ –∏–º–∞ —Ç–∞–∫–æ–≤–∞
        resetGameState(); 

        hiddenIndex = Math.floor(Math.random() * numberOfPics);
        hiddenImageElement = gamePicsEl.querySelectorAll('img')[hiddenIndex]; // –í–∑–∏–º–∞–º–µ —Ä–µ—Ñ–µ—Ä–µ–Ω—Ü–∏—è –∫—ä–º –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ç–∞, –∫–æ—è—Ç–æ —â–µ —Å–∫—Ä–∏–µ–º

        // *–ö–û–†–ï–ö–¶–ò–Ø*: –°–∫—Ä–∏–≤–∞–º–µ –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∞—Ç–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞
        hiddenImageElement.style.opacity = '0';
        hiddenImageElement.style.visibility = 'hidden';
        hiddenImageElement.style.pointerEvents = 'none'; // –ü—Ä–∞–≤–∏ —è –Ω–µ–∫–ª–∏–∫–∞–µ–º–∞

        // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–∞–º–µ hideOverlayElement —Ç–æ—á–Ω–æ –Ω–∞–¥ —Å–∫—Ä–∏—Ç–∞—Ç–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞
        const imgRect = hiddenImageElement.getBoundingClientRect();
        const gamePicsRect = gamePicsEl.getBoundingClientRect(); // –†–æ–¥–∏—Ç–µ–ª—è—Ç, —Å–ø—Ä—è–º–æ –∫–æ–π—Ç–æ –µ position: absolute

        // –ò–∑–ø–æ–ª–∑–≤–∞–º–µ offsetTop/offsetLeft –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—è, –∞–∫–æ –µ –≤—ä–∑–º–æ–∂–Ω–æ, –∑–∞ –ø–æ-—Å—Ç–∞–±–∏–ª–Ω–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–∞–Ω–µ
        // –∏–ª–∏ —Ä–∞–∑–ª–∏–∫–∞—Ç–∞ –º–µ–∂–¥—É top/left –Ω–∞ –µ–ª–µ–º–µ–Ω—Ç–∞ –∏ —Ä–æ–¥–∏—Ç–µ–ª—è
        hideOverlayElement.style.top = `${imgRect.top - gamePicsRect.top}px`;
        hideOverlayElement.style.left = `${imgRect.left - gamePicsRect.left}px`;
        
        // –ü–æ–∫–∞–∑–≤–∞–º–µ overlay –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ç–∞ –ø–ª–∞–≤–Ω–æ
        hideOverlayElement.classList.add('is-visible');

        awaitingChoice = true;
        startBtn.classList.add('hidden');
        showMessage('–ü–æ–∑–Ω–∞–π –∫–æ–µ –ª–∏–ø—Å–≤–∞!', 'info');
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –∏–∑–±–æ—Ä–∞ –Ω–∞ –∏–≥—Ä–∞—á–∞ –æ—Ç –¥–æ–ª–Ω–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏
    function chooseHandler(e) {
        if (!awaitingChoice) return;

        const chosen = e.target.dataset.name;
        const hidden = selectedGamePics[hiddenIndex];

        if (chosen === hidden) {
            showMessage('–ë—Ä–∞–≤–æ, –£–π–ª–∏!', 'success');
            
            // –°–∫—Ä–∏–≤–∞–º–µ hide-overlay –µ–ª–µ–º–µ–Ω—Ç–∞ –ø–ª–∞–≤–Ω–æ
            if (hideOverlayElement) {
                hideOverlayElement.classList.remove('is-visible');
                // –ò–∑—á–∏—Å—Ç–≤–∞–º–µ –∏–Ω–ª–∞–π–Ω —Å—Ç–∏–ª–æ–≤–µ—Ç–µ –∑–∞ –ø–æ–∑–∏—Ü–∏—è, –∑–∞ –¥–∞ –Ω–µ –ø—Ä–µ—á–∞—Ç –ø—Ä–∏ —Å–ª–µ–¥–≤–∞—â–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–∞–Ω–µ
                hideOverlayElement.style.top = ''; 
                hideOverlayElement.style.left = '';
            }

            // *–ö–û–†–ï–ö–¶–ò–Ø*: –ü–æ–∫–∞–∑–≤–∞–º–µ –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∞—Ç–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞
            if (hiddenImageElement) {
                hiddenImageElement.style.opacity = '1';
                hiddenImageElement.style.visibility = 'visible';
                hiddenImageElement.style.pointerEvents = 'auto'; // –ü—Ä–∞–≤–∏ —è –∫–ª–∏–∫–∞–µ–º–∞ –æ—Ç–Ω–æ–≤–æ
            }

            awaitingChoice = false;
            reloadBtn.classList.remove('hidden');
            startBtn.classList.add('hidden');
        } else {
            showMessage('–û–ø–∏—Ç–∞–π –ø–∞–∫!', 'error');
        }
    }

    function showMessage(text, type) {
        messageDisplay.classList.remove('message-animate', 'message-success', 'message-error');
        messageDisplay.style.opacity = 0;
        messageDisplay.style.transform = 'scale(0.8)';

        messageDisplay.textContent = text;
        
        setTimeout(() => {
            messageDisplay.classList.add('message-animate', `message-${type}`);
        }, 50);
    }

    function resetGameState() {
        awaitingChoice = false;
        hiddenIndex = null;
        
        // *–ö–û–†–ï–ö–¶–ò–Ø*: –ü–æ–∫–∞–∂–∏ –≤—Å–∏—á–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ #gamePics, –∞–∫–æ —Å–∞ —Å–∫—Ä–∏—Ç–∏
        gamePicsEl.querySelectorAll('img').forEach(img => {
            img.style.opacity = '1';
            img.style.visibility = 'visible';
            img.style.pointerEvents = 'auto';
        });

        // –°–∫—Ä–∏–≤–∞–º–µ hide-overlay, –∞–∫–æ –µ –≤–∏–¥–∏–º
        if (hideOverlayElement) {
            hideOverlayElement.classList.remove('is-visible'); // –°–∫—Ä–∏–≤–∞ –≥–æ
            // –ò–∑—á–∏—Å—Ç–≤–∞–º–µ –∏–Ω–ª–∞–π–Ω —Å—Ç–∏–ª–æ–≤–µ—Ç–µ –∑–∞ –ø–æ–∑–∏—Ü–∏—è
            hideOverlayElement.style.top = ''; 
            hideOverlayElement.style.left = '';
        }

        // –ù—É–ª–∏—Ä–∞–º–µ —Ä–µ—Ñ–µ—Ä–µ–Ω—Ü–∏—è—Ç–∞ –∫—ä–º —Å–∫—Ä–∏—Ç–∞—Ç–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –∑–∞ —Å–ª–µ–¥–≤–∞—â–∞ –∏–≥—Ä–∞
        hiddenImageElement = null; 

        showMessage('–ù–∞—Ç–∏—Å–Ω–∏ "–°–ö–†–ò–ô –ö–ê–†–¢–ò–ù–ê" –∑–∞ –¥–∞ –∑–∞–ø–æ—á–Ω–µ—à.', 'info');
        
        reloadBtn.classList.add('hidden');
        startBtn.classList.remove('hidden');
        startBtn.disabled = false;
    }

    // --- –°–ª—É—à–∞—Ç–µ–ª–∏ –Ω–∞ —Å—ä–±–∏—Ç–∏—è ---
    themeRadios.forEach(r => r.addEventListener('change', updateStartButtonState));
    countRadios.forEach(r => r.addEventListener('change', updateStartButtonState));
    startGameBtn.addEventListener('click', startGame);
    startBtn.addEventListener('click', hideRandomPicture);
    reloadBtn.addEventListener('click', () => {
        showMessage('', 'info'); // –ò–∑—á–∏—Å—Ç–≤–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ
        renderGamePics(); // –¢–æ–≤–∞ —â–µ –ø—Ä–µ—Å—ä–∑–¥–∞–¥–µ –≤—Å–∏—á–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏
        resetGameState(); // –ì–∞—Ä–∞–Ω—Ç–∏—Ä–∞ —á–∏—Å—Ç–æ —Å—ä—Å—Ç–æ—è–Ω–∏–µ –∏ —Å–∫—Ä–∏—Ç overlay
    });

    // --- –ü—ä—Ä–≤–æ–Ω–∞—á–∞–ª–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞ ---
    updateStartButtonState(); 

    document.getElementById('controls').classList.add('hidden');
    containerEl.classList.add('hidden');
});
