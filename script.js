// script.js
document.addEventListener('DOMContentLoaded', () => {
    // üéØ –î–µ—Ñ–∏–Ω–∏—Ü–∏–∏ –Ω–∞ —Ç–µ–º–∏—Ç–µ –∏ —Ç–µ—Ö–Ω–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const ALL_THEMES = {
        –ø—Ä–µ–≤–æ–∑–Ω–∏_—Å—Ä–µ–¥—Å—Ç–≤–∞: ['bus.jpg', 'airplane.jpg', 'firetruck.jpg', 'train.jpg', 'truck.jpg'],
        animals: ['dog.jpg', 'cat.jpg', 'lion.jpg', 'elephant.jpg', 'monkey.jpg'],
        flowers: ['rose.jpg', 'tulip.jpg', 'lily.jpg', 'daisy.jpg', 'sunflower.jpg']
    };

    // üéØ DOM –µ–ª–µ–º–µ–Ω—Ç–∏
    const themeRadios = document.querySelectorAll('input[name="theme"]');
    const countRadios = document.querySelectorAll('input[name="count"]');
    const startGameBtn = document.getElementById('startGameBtn');
    const optionsContainer = document.getElementById('optionsContainer');

    const gameTitleEl = document.getElementById('gameTitle');
    const messageDisplay = document.getElementById('gameMessage');
    const startBtn = document.getElementById('start');
    const reloadBtn = document.getElementById('reload');
    const allPicsEl = document.getElementById('allPics');
    const gamePicsEl = document.getElementById('gamePics');
    const containerEl = document.getElementById('container');

    // üéØ –ü—Ä–æ–º–µ–Ω–ª–∏–≤–∏ –∑–∞ —Å—ä—Å—Ç–æ—è–Ω–∏–µ—Ç–æ –Ω–∞ –∏–≥—Ä–∞—Ç–∞
    let currentThemeImages = [];
    let numberOfPics = 0;
    let selectedGamePics = [];
    let hiddenImageElement = null; // –†–µ—Ñ–µ—Ä–µ–Ω—Ü–∏—è –∫—ä–º —Å–∫—Ä–∏—Ç–∏—è img –µ–ª–µ–º–µ–Ω—Ç
    let hiddenIndex = null;
    let awaitingChoice = false;
    // let placeholderElement = null; // –ù—è–º–∞ –¥–∞ –∏–∑–ø–æ–ª–∑–≤–∞–º–µ placeholderElement

    // --- –§—É–Ω–∫—Ü–∏–∏ ---

    function updateStartButtonState() {
        const themeSelected = Array.from(themeRadios).some(r => r.checked);
        const countSelected = Array.from(countRadios).some(r => r.checked);
        startGameBtn.disabled = !(themeSelected && countSelected);
    }

    function startGame() {
        const selectedTheme = document.querySelector('input[name="theme"]:checked').value;
        numberOfPics = parseInt(document.querySelector('input[name="count"]:checked').value);

        currentThemeImages = ALL_THEMES[selectedTheme];

        gameTitleEl.textContent = `–ü–æ–∑–Ω–∞–π ${selectedTheme.replace('_', ' ').toUpperCase()}!`;
        showMessage('–ù–∞—Ç–∏—Å–Ω–∏ "–°–ö–†–ò–ô –ö–ê–†–¢–ò–ù–ê" –∑–∞ –¥–∞ –∑–∞–ø–æ—á–Ω–µ—à.', 'info');

        optionsContainer.classList.add('hidden');
        startGameBtn.classList.add('hidden');

        document.getElementById('controls').classList.remove('hidden');
        containerEl.classList.remove('hidden');

        renderGamePics();
        renderAllPics();
        resetGameState(); // –ì–∞—Ä–∞–Ω—Ç–∏—Ä–∞–º–µ, —á–µ –∏–≥—Ä–∞—Ç–∞ –µ –≤ —á–∏—Å—Ç–æ —Å—ä—Å—Ç–æ—è–Ω–∏–µ
    }

    function renderAllPics() {
        allPicsEl.innerHTML = '';
        currentThemeImages.forEach(name => {
            const img = document.createElement('img');
            img.src = 'images/' + name;
            img.dataset.name = name;
            img.alt = name.replace('.jpg', '');
            img.addEventListener('click', chooseHandler);
            allPicsEl.appendChild(img);
        });
    }

    function renderGamePics() {
        gamePicsEl.innerHTML = '';
        const shuffledImages = [...currentThemeImages].sort(() => 0.5 - Math.random());
        selectedGamePics = shuffledImages.slice(0, numberOfPics);

        selectedGamePics.forEach((name, idx) => {
            const img = document.createElement('img');
            img.src = 'images/' + name;
            img.dataset.idx = idx;
            img.alt = name.replace('.jpg', '');
            gamePicsEl.appendChild(img);
        });

        reloadBtn.classList.add('hidden');
        startBtn.classList.remove('hidden');
        startBtn.disabled = false;
    }

    // –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å–∫—Ä–∏–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞
    function hideRandomPicture() {
        if (awaitingChoice) return;

        resetGameState(); // –ì–∞—Ä–∞–Ω—Ç–∏—Ä–∞–º–µ —á–∏—Å—Ç–æ —Å—ä—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥–∏ —Å–∫—Ä–∏–≤–∞–Ω–µ

        hiddenIndex = Math.floor(Math.random() * numberOfPics);
        hiddenImageElement = gamePicsEl.querySelectorAll('img')[hiddenIndex];

        // –ü—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤—è–º–µ –∫–ª–∞—Å–∞ –∑–∞ —Å–∫—Ä–∏–≤–∞–Ω–µ –∫—ä–º –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ç–∞
        hiddenImageElement.classList.add('is-hidden'); 

        awaitingChoice = true;
        startBtn.classList.add('hidden');
        showMessage('–ü–æ–∑–Ω–∞–π –∫–æ–µ –ª–∏–ø—Å–≤–∞!', 'info');
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –∏–∑–±–æ—Ä–∞ –Ω–∞ –∏–≥—Ä–∞—á–∞ –æ—Ç –¥–æ–ª–Ω–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏
    function chooseHandler(e) {
        if (!awaitingChoice) return;

        const chosen = e.target.dataset.name;
        const hidden = selectedGamePics[hiddenIndex];

        if (chosen === hidden) {
            showMessage('–ë—Ä–∞–≤–æ, –£–π–ª–∏!', 'success');
            
            if (hiddenImageElement) {
                // –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ –∫–ª–∞—Å–∞ –∑–∞ —Å–∫—Ä–∏–≤–∞–Ω–µ
                hiddenImageElement.classList.remove('is-hidden');
                
                // –î–æ–±–∞–≤—è–º–µ –∫–ª–∞—Å–∞ –∑–∞ –∞–Ω–∏–º–∞—Ü–∏—è
                hiddenImageElement.classList.add('revealed-animation');

                // –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ –∫–ª–∞—Å–∞ –∑–∞ –∞–Ω–∏–º–∞—Ü–∏—è —Å–ª–µ–¥ –Ω–µ–π–Ω–æ—Ç–æ –ø—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ, –∑–∞ –¥–∞ –º–æ–∂–µ –¥–∞ —Å–µ –∑–∞–¥–µ–π—Å—Ç–≤–∞ –æ—Ç–Ω–æ–≤–æ
                hiddenImageElement.addEventListener('animationend', function handler() {
                    hiddenImageElement.classList.remove('revealed-animation');
                    hiddenImageElement.removeEventListener('animationend', handler);
                });
            }
            awaitingChoice = false;
            reloadBtn.classList.remove('hidden');
            startBtn.classList.add('hidden');
        } else {
            showMessage('–û–ø–∏—Ç–∞–π –ø–∞–∫!', 'error');
        }
    }

    function showMessage(text, type) {
        messageDisplay.classList.remove('message-animate', 'message-success', 'message-error');
        messageDisplay.style.opacity = 0;
        messageDisplay.style.transform = 'scale(0.8)';

        messageDisplay.textContent = text;
        
        setTimeout(() => {
            messageDisplay.classList.add('message-animate', `message-${type}`);
        }, 50);
    }

    function resetGameState() {
        awaitingChoice = false;
        hiddenIndex = null;
        
        // –ê–∫–æ –∏–º–∞ —Å–∫—Ä–∏—Ç–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –æ—Ç –ø—Ä–µ–¥–∏—à–Ω–∞ –∏–≥—Ä–∞, —É–≤–µ—Ä–µ—Ç–µ —Å–µ, —á–µ –µ –≤–∏–¥–∏–º–∞
        if (hiddenImageElement) {
            hiddenImageElement.classList.remove('is-hidden');
            hiddenImageElement.classList.remove('revealed-animation');
        }
        
        hiddenImageElement = null; 
        // placeholderElement = null; // –ù—è–º–∞ –¥–∞ –∏–∑–ø–æ–ª–∑–≤–∞–º–µ placeholderElement

        showMessage('–ù–∞—Ç–∏—Å–Ω–∏ "–°–ö–†–ò–ô –ö–ê–†–¢–ò–ù–ê" –∑–∞ –¥–∞ –∑–∞–ø–æ—á–Ω–µ—à.', 'info');
        
        reloadBtn.classList.add('hidden');
        startBtn.classList.remove('hidden');
        startBtn.disabled = false;
    }

    // --- –°–ª—É—à–∞—Ç–µ–ª–∏ –Ω–∞ —Å—ä–±–∏—Ç–∏—è ---
    themeRadios.forEach(r => r.addEventListener('change', updateStartButtonState));
    countRadios.forEach(r => r.addEventListener('change', updateStartButtonState));
    startGameBtn.addEventListener('click', startGame);
    startBtn.addEventListener('click', hideRandomPicture);
    reloadBtn.addEventListener('click', () => {
        showMessage('', 'info');
        renderGamePics();
        resetGameState();
    });

    // --- –ü—ä—Ä–≤–æ–Ω–∞—á–∞–ª–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞ ---
    updateStartButtonState(); 

    document.getElementById('controls').classList.add('hidden');
    containerEl.classList.add('hidden');
});
